@model IEnumerable<Tourest.Data.Entities.Booking>
@{
    ViewData["Title"] = "Unassigned Bookings";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Tourest</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        :root {
            --primary-color: #28a745;
            --secondary-color: #6c757d;
            --danger-color: #dc3545;
            --warning-color: #ffc107;
        }

        .booking-card {
            transition: all 0.3s ease;
            border-left: 4px solid var(--warning-color);
            margin-bottom: 1.5rem;
        }

            .booking-card:hover {
                transform: translateY(-3px);
                box-shadow: 0 5px 15px rgba(0,0,0,0.1);
            }

        .status-badge {
            font-size: 0.75rem;
            font-weight: 600;
            padding: 0.35rem 0.65rem;
        }

        .badge-pending {
            background-color: #fff3cd;
            color: #856404;
        }

        .badge-confirmed {
            background-color: #d4edda;
            color: #155724;
        }

        .badge-cancelled {
            background-color: #f8d7da;
            color: #721c24;
        }

        .action-buttons .btn {
            min-width: 120px;
        }

        .new-booking-indicator {
            position: absolute;
            top: -5px;
            right: -5px;
            width: 12px;
            height: 12px;
            background-color: var(--danger-color);
            border-radius: 50%;
            animation: pulse 2s infinite;
        }

        @@keyframes pulse {
            0% {
                transform: scale(0.95);
            }

            50% {
                transform: scale(1.1);
            }

            100% {
                transform: scale(0.95);
            }
        }

        .countdown-timer {
            font-weight: 600;
            color: var(--danger-color);
        }
    </style>
</head>
<body>
    <div class="container-fluid px-0">
        <!-- Header -->
        <header class="bg-warning text-dark py-4 mb-4 shadow">
            <div class="container">
                <div class="d-flex justify-content-between align-items-center">
                    <div>
                        <h1 class="h3 mb-0"><i class="fas fa-calendar-exclamation me-2"></i> Unassigned Bookings</h1>
                        <p class="mb-0">Bookings waiting for tour guide assignment</p>
                    </div>
                    <div class="d-flex align-items-center">
                        <img src="https://via.placeholder.com/40" alt="Profile" class="rounded-circle me-2" width="40" height="40">
                        <span>Tour Manager</span>
                    </div>
                </div>
            </div>
        </header>

        <!-- Main Content -->
        <main class="container">
            <!-- Filter and Status -->
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h2 class="h4 mb-0"><i class="fas fa-list me-2"></i> Unassigned Bookings List</h2>
                <div>
                    <div class="dropdown d-inline-block me-2">
                        <button class="btn btn-outline-secondary dropdown-toggle" type="button" id="filterDropdown" data-bs-toggle="dropdown">
                            <i class="fas fa-filter me-1"></i> Filter
                        </button>
                        <ul class="dropdown-menu">
                            <li><a class="dropdown-item" href="#">All Bookings</a></li>
                            <li><a class="dropdown-item" href="#">New Today</a></li>
                            <li><a class="dropdown-item" href="#">Upcoming (7 days)</a></li>
                        </ul>
                    </div>
                    <button class="btn btn-primary" id="refreshBtn">
                        <i class="fas fa-sync-alt me-1"></i> Refresh
                    </button>
                </div>
            </div>

            <!-- Bookings List -->
            <div class="row">
                <div class="col-12">
                    @if (Model != null && Model.Any())
                    {
                        @foreach (var booking in Model)
                        {
                            <div class="card booking-card mb-3 position-relative" id="booking-@booking.BookingID" data-booking-id="@booking.BookingID">
                               
                                <div class="card-body">
                                    <div class="d-flex justify-content-between align-items-start">
                                        <div>
                                            <h5 class="card-title mb-2">
                                                <i class="fas fa-map-marked-alt text-warning me-2"></i>
                                                @booking.Tour?.Name
                                                <span class="status-badge badge-@booking.Status.ToLower() ms-2">
                                                    @if (booking.Status.ToLower() == "confirmed")
                                                    {
                                                        <i class="fas fa-check-circle me-1"></i>
                                                    }
                                                    else if (booking.Status.ToLower() == "pending")
                                                    {
                                                        <i class="fas fa-clock me-1"></i>
                                                    }
                                                    else
                                                    {
                                                        <i class="fas fa-times-circle me-1"></i>
                                                    }
                                                    @booking.Status
                                                </span>
                                            </h5>

                                            <div class="card-text mb-2">
                                                <small class="text-muted">
                                                    <i class="far fa-calendar me-1"></i>
                                                    Booked on @booking.BookingDate.ToString("MMM dd, yyyy 'at' hh:mm tt")
                                                </small>
                                            </div>

                                            <div class="d-flex flex-wrap gap-3 mb-2">
                                                <div>
                                                    <i class="fas fa-calendar-day text-info me-1"></i>
                                                    <span>Departure: @booking.DepartureDate.ToString("MMM dd, yyyy")</span>
                                                </div>
                                                <div>
                                                    <i class="fas fa-users text-success me-1"></i>
                                                    <span>@booking.NumberOfAdults Adults, @booking.NumberOfChildren Children</span>
                                                </div>
                                                <div>
                                                    <i class="fas fa-map-marker-alt text-danger me-1"></i>
                                                    <span>Pickup: @booking.PickupPoint</span>
                                                </div>
                                                <div>
                                                    <i class="fas fa-money-bill-wave text-primary me-1"></i>
                                                    <span>Total: @booking.TotalPrice.ToString("C0")</span>
                                                </div>
                                            </div>

                                            <div class="mt-2">
                                                <small class="text-muted">
                                                    <i class="fas fa-hourglass-half me-1"></i>
                                                    Time unassigned:
                                                    <span class="countdown-timer" id="countdown-@booking.BookingID"></span>
                                                </small>
                                            </div>
                                        </div>

                                        <div class="action-buttons">
                                            <div class="d-flex flex-column gap-2">
                                                <button class="btn btn-primary assign-guide-btn" data-booking-id="@booking.BookingID">
                                                    <i class="fas fa-user-plus me-1"></i> Assign Guide
                                                </button>
                                                <a href="@Url.Action("Details", "Booking", new { id = booking.BookingID })" class="btn btn-outline-secondary">
                                                    <i class="fas fa-info-circle me-1"></i> Details
                                                </a>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    }
                    else
                    {
                        <div class="text-center py-5 bg-light rounded">
                            <i class="fas fa-calendar-check fa-3x text-muted mb-3"></i>
                            <h3 class="h4 text-muted">No Unassigned Bookings</h3>
                            <p class="text-muted">All bookings have been assigned to tour guides.</p>
                            <button class="btn btn-primary" id="checkForNewBtn">
                                <i class="fas fa-sync-alt me-2"></i> Check for New Bookings
                            </button>
                        </div>
                    }
                </div>
            </div>
        </main>
    </div>

    <!-- Assign Guide Modal -->
    <div class="modal fade" id="assignGuideModal" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header bg-warning text-dark">
                    <h5 class="modal-title"><i class="fas fa-user-plus me-2"></i> Assign Tour Guide</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="assignGuideForm">
                        <input type="hidden" id="bookingId" name="bookingId" value="">
                        <div class="mb-3">
                            <label for="guideSelect" class="form-label">Select Tour Guide</label>
                            <select class="form-select" id="guideSelect" required>
                                <option value="">-- Select Guide --</option>
                                <!-- Options will be loaded via AJAX -->
                            </select>
                        </div>
                        <div class="mb-3">
                            <label for="assignmentNotes" class="form-label">Assignment Notes</label>
                            <textarea class="form-control" id="assignmentNotes" rows="3"></textarea>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-primary" id="confirmAssignBtn">Assign Guide</button>
                </div>
            </div>
        </div>
    </div>

    <!-- JavaScript Libraries -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <script>
        $(document).ready(function() {
            // Initialize countdown timers
            $('.booking-card').each(function() {
                const bookingId = $(this).data('booking-id');
                const createdTime = new Date('@DateTime.Now'); // Should use actual booking time
                const deadline = new Date(createdTime);
                deadline.setHours(deadline.getHours() + 24); // 24-hour deadline

                function updateCountdown() {
                    const now = new Date();
                    const diff = deadline - now;

                    if (diff <= 0) {
                        $(`#countdown-${bookingId}`).text("Overdue");
                        return;
                    }

                    const hours = Math.floor(diff / (1000 * 60 * 60));
                    const minutes = Math.floor((diff % (1000 * 60 * 60)) / (1000 * 60));
                    const seconds = Math.floor((diff % (1000 * 60)) / 1000);

                    $(`#countdown-${bookingId}`).text(`${hours}h ${minutes}m ${seconds}s`);
                }

                updateCountdown();
                setInterval(updateCountdown, 1000);
            });

            // Handle assign guide button click
            $(document).on('click', '.assign-guide-btn', function() {
                const bookingId = $(this).data('booking-id');
                $('#bookingId').val(bookingId);

                // Load available guides via AJAX
                $.get('@Url.Action("GetAvailableGuides", "Booking")', function(data) {
                    const guideSelect = $('#guideSelect');
                    guideSelect.empty();
                    guideSelect.append('<option value="">-- Select Guide --</option>');

                    data.forEach(guide => {
                        guideSelect.append(`<option value="${guide.id}">${guide.name} (${guide.languages})</option>`);
                    });

                    $('#assignGuideModal').modal('show');
                }).fail(function() {
                    alert('Failed to load available guides');
                });
            });

            // Handle confirm assignment
            $('#confirmAssignBtn').click(function() {
                const bookingId = $('#bookingId').val();
                const guideId = $('#guideSelect').val();
                const notes = $('#assignmentNotes').val();

                if (!guideId) {
                    alert('Please select a tour guide');
                    return;
                }

                $.post('@Url.Action("AssignGuide", "Booking")', {
                    bookingId: bookingId,
                    guideId: guideId,
                    notes: notes
                }, function(response) {
                    if (response.success) {
                        $('#assignGuideModal').modal('hide');
                        // Remove the assigned booking from the list
                        $(`#booking-${bookingId}`).fadeOut(300, function() {
                            $(this).remove();
                            // If no bookings left, show empty state
                            if ($('.booking-card').length === 0) {
                                $('.col-12').html(`
                                    <div class="text-center py-5 bg-light rounded">
                                        <i class="fas fa-calendar-check fa-3x text-muted mb-3"></i>
                                        <h3 class="h4 text-muted">No Unassigned Bookings</h3>
                                        <p class="text-muted">All bookings have been assigned to tour guides.</p>
                                        <button class="btn btn-primary" id="checkForNewBtn">
                                            <i class="fas fa-sync-alt me-2"></i> Check for New Bookings
                                        </button>
                                    </div>
                                `);
                            }
                        });
                    } else {
                        alert('Error: ' + response.message);
                    }
                }).fail(function() {
                    alert('Failed to assign guide');
                });
            });

            // Refresh button
            $('#refreshBtn, #checkForNewBtn').click(function() {
                location.reload();
            });
        });
    </script>
</body>
</html>
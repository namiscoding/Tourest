@model List<Tourest.TourGuide.ViewModels.TourGuideRatingViewModel>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="description" content="My Completed Tours - View all tours you've guided with Touest." />
    <meta name="keywords" content="Tour Guide, Completed Tours, Tour History" />
    <title>My Completed Tours - Touest</title>

    <!-- Favicon -->
    <link rel="icon" href="assets/images/favicon.png" type="image/x-icon" />

    <!-- CSS Files -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" />
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700&display=swap" rel="stylesheet">

    <!-- Custom CSS -->
    <style>
        body {
            background-color: #f8f9fa;
            font-family: 'Roboto', sans-serif;
        }

        .dashboard-header {
            background: linear-gradient(135deg, #28a745, #218838);
            color: white;
            padding: 2rem;
            border-radius: 0 0 10px 10px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        }

        .tours-section {
            padding: 2rem 0;
        }

        .tours-container {
            max-width: 1200px;
            margin: 0 auto;
            background: white;
            border-radius: 8px;
            padding: 1.5rem;
            box-shadow: 0 2px 15px rgba(0, 0, 0, 0.08);
        }

        .filter-bar {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 1.5rem;
            flex-wrap: wrap;
            gap: 1rem;
        }

        .tour-card {
            padding: 1.5rem;
            margin-bottom: 1.5rem;
            background: white;
            border-radius: 8px;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
            border-left: 4px solid #28a745;
            transition: transform 0.3s ease;
        }

            .tour-card:hover {
                transform: translateY(-3px);
            }

        .tour-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 0.5rem;
        }

        .tour-title {
            font-size: 1.25rem;
            font-weight: 600;
            color: #2c3e50;
        }

        .tour-date {
            color: #6c757d;
            font-size: 0.9rem;
        }

        .tour-meta {
            display: flex;
            gap: 1.5rem;
            margin-bottom: 0.75rem;
            color: #6c757d;
            font-size: 0.9rem;
            flex-wrap: wrap;
        }

            .tour-meta span {
                display: flex;
                align-items: center;
                gap: 0.5rem;
            }

        .tour-description {
            color: #495057;
            line-height: 1.6;
            margin-bottom: 1rem;
        }

        .tour-footer {
            display: flex;
            justify-content: space-between;
            align-items: center;
            flex-wrap: wrap;
            gap: 1rem;
        }

        .tour-rating {
            display: flex;
            align-items: center;
            gap0 .5rem;
        }

        .rating-stars {
            color: #ffc107;
            font-size: 1rem;
        }

        .rating-count {
            color: #6c757d;
            font-size: 0.85rem;
        }

        .btn {
            padding: 0.5rem 1rem;
            border-radius: 5px;
            font-size: 0.9rem;
            transition: all 0.3s ease;
        }

        .btn-primary {
            background-color: #28a745;
            color: white;
            border: none;
        }

            .btn-primary:hover {
                background-color: #218838;
            }

        .btn-outline {
            background-color: transparent;
            border: 1px solid #28a745;
            color: #28a745;
        }

            .btn-outline:hover {
                background-color: #f8f9fa;
            }

        .status-badge {
            padding: 0.25rem 0.5rem;
            border-radius: 20px;
            font-size: 0.75rem;
            font-weight: 600;
            text-transform: uppercase;
            background-color: #d4edda;
            color: #155724;
        }

        .no-tours {
            text-align: center;
            padding: 3rem;
            color: #6c757d;
        }

        .feedback-modal .modal-dialog {
            max-width: 700px;
        }

        .feedback-header {
            background-color: #28a745;
            color: white;
        }

        .feedback-avatar {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            object-fit: cover;
        }

        .customer-comment {
            background-color: #f8f9fa;
            border-radius: 8px;
            padding: 1rem;
            margin-bottom: 1rem;
        }

        .time-ago {
            font-size: 0.8rem;
            color: #6c757d;
        }


        .tour-meta {
            flex-direction: column;
            gap: 0.5rem;
        }

        .tour-footer {
            flex-direction: column;
            align-items: flex-start;
        }

        }
    </style>
</head>
<body>
    <!-- Main Content -->
    <main>
        <!-- Dashboard Header -->
        <header class="dashboard-header">
            <div class="container">
                <h1><i class="fas fa-clipboard-check me-2"></i> My Completed Tours</h1>
                <p>View all tours you've guided</p>
            </div>
        </header>

        <!-- Tours Section -->
        <section class="tours-section">
            <div class="container">
                <div class="tours-container">
                    <!-- Filter Bar -->
                    <div class="filter-bar">
                        <h2><i class="fas fa-history me-2"></i> Tour History</h2>
                        <select class="form-select w-auto" id="status-filter">
                            <option value="all">All Status</option>
                            <option value="completed">Completed</option>
                        </select>
                    </div>

                    <!-- Tours List -->
                    <div class="tours-list">
                        @if (Model != null && Model.Any())
                        {
                            @foreach (var tour in Model)
                            {
                                <div class="tour-card">
                                    <div class="tour-content">
                                        <div class="tour-header">
                                            <h3 class="tour-title">@tour.TourName</h3>
                                            <span class="tour-date">Completed: @tour.CompletedDate.ToString("MMMM d, yyyy")</span>
                                        </div>
                                        <div class="tour-meta">
                                            <span><i class="fas fa-users"></i> @tour.TotalPeople participants (@tour.TotalAdults adults, @tour.TotalChildren children)</span>
                                            <span><i class="fas fa-map-marker-alt"></i> @tour.Destination</span>
                                            <span><i class="fas fa-calendar-alt"></i> @tour.DepartureDate.ToString("MMMM d, yyyy")</span>
                                            <span class="status-badge">@tour.Status</span>
                                        </div>
                                        <p class="tour-description">@tour.Description</p>
                                        <div class="tour-footer">
                                            <div class="tour-rating">
                                                <div class="rating-stars">
                                                    @{
                                                        var fullStars = (int)Math.Floor(tour.AverageRating);
                                                        var hasHalfStar = tour.AverageRating - fullStars >= 0.5m;
                                                        var emptyStars = 5 - fullStars - (hasHalfStar ? 1 : 0);
                                                    }
                                                    @for (int i = 0; i < fullStars; i++)
                                                    {
                                                        <i class="fas fa-star"></i>
                                                    }
                                                    @if (hasHalfStar)
                                                    {
                                                        <i class="fas fa-star-half-alt"></i>
                                                    }
                                                    @for (int i = 0; i < emptyStars; i++)
                                                    {
                                                        <i class="far fa-star"></i>
                                                    }
                                                </div>
                                                <span class="rating-count">@tour.TotalRatings review@(tour.TotalRatings != 1 ? "s" : "")</span>
                                            </div>
                                            <div>
                                                <button class="btn btn-primary btn-sm view-feedback-btn"
                                                        data-tour-id="@tour.AssignmentId"
                                                        data-tour-name="@tour.TourName"
                                                        data-average-rating="@tour.AverageRating.ToString("0.0")"
                                                        data-total-ratings="@tour.TotalRatings">
                                                    See Feedback (@tour.Ratings?.Count)
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        }
                        else
                        {
                            <div class="no-tours">
                                <i class="fas fa-calendar-times fa-3x mb-3"></i>
                                <h4>No Completed Tours Found</h4>
                                <p>Your completed tours will appear here once available.</p>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </section>
    </main>

    <!-- Feedback Modal -->
    <div class="modal fade feedback-modal" id="feedbackModal" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header feedback-header">
                    <h5 class="modal-title">
                        <i class="fas fa-comments me-2"></i> <span id="modalTourName"></span> - Feedback
                    </h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <div class="rating-stars mb-1">
                            @for (int i = 1; i <= 5; i++)
                            {
                                <i class="fas fa-star" id="modalStar-@i"></i>
                            }
                        </div>
                        <span id="modalRatingSummary" class="text-muted"></span>
                    </div>
                    <div id="feedbackList"></div>
                    <div id="noFeedback" class="text-center py-4" style="display: none;">
                        <i class="far fa-comment-alt fa-3x text-muted mb-3"></i>
                        <h5>No Feedback Yet</h5>
                        <p>This tour hasn't received any feedback.</p>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>

    <!-- JS Files -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/js/bootstrap.bundle.min.js"></script>

    <!-- Custom JavaScript -->
    <script>
        $(document).ready(function () {
            // Filter tours by status
            $('#status-filter').on('change', function () {
                const statusFilter = $(this).val();
                $('.no-tours-filtered').remove();

                $('.tour-card').each(function () {
                    const cardStatus = $(this).find('.status-badge').text().toLowerCase();
                    const statusMatch = statusFilter === 'all' || cardStatus === statusFilter;
                    $(this).toggle(statusMatch);
                });

                if ($('.tour-card:visible').length === 0) {
                    $('.tours-list').append(`
                        <div class="no-tours-filtered text-center py-4">
                            <i class="fas fa-filter fa-3x mb-3 text-muted"></i>
                            <h4>No Tours Match Your Filter</h4>
                            <p>Try adjusting the filter.</p>
                        </div>
                    `);
                }
            });

            // View feedback button click handler
            $('.view-feedback-btn').on('click', function () {
                const tourId = $(this).data('tour-id');
                const tourName = $(this).data('tour-name');
                const averageRating = parseFloat($(this).data('average-rating'));
                const totalRatings = parseInt($(this).data('total-ratings'));

                // Set modal title and rating info
                $('#modalTourName').text(tourName);
                $('#modalRatingSummary').text(`${averageRating.toFixed(1)}/5 from ${totalRatings} review${totalRatings !== 1 ? 's' : ''}`);

                // Update star ratings
                for (let i = 1; i <= 5; i++) {
                    const star = $('#modalStar-' + i);
                    star.removeClass('text-warning fa-star-half-alt').addClass('fa-star');
                    if (i <= Math.floor(averageRating)) {
                        star.addClass('text-warning');
                    } else if (i - 0.5 <= averageRating) {
                        star.addClass('text-warning').removeClass('fa-star').addClass('fa-star-half-alt');
                    }
                }

                // Load feedback via AJAX
                $.get('/TourGuide/GetTourFeedback', { tourId: tourId }, function (data) {
                    const feedbackList = $('#feedbackList');
                    feedbackList.empty();

                    if (data.length > 0) {
                        $('#noFeedback').hide();
                        data.forEach(function (feedback) {
                            const timeAgo = getTimeAgo(new Date(feedback.ratingDate));
                            const stars = Array(5).fill().map((_, i) =>
                                i < Math.floor(feedback.ratingValue) ?
                                '<i class="fas fa-star text-warning"></i>' :
                                '<i class="far fa-star text-warning"></i>'
                            ).join('');

                            feedbackList.append(`
                                <div class="customer-comment">
                                    <div class="d-flex align-items-center mb-2">
                                        <img src="${feedback.customerAvatar || 'https://via.placeholder.com/40'}"
                                             class="feedback-avatar me-3"
                                             alt="${feedback.customerName}">
                                        <div>
                                            <h6 class="mb-0">${feedback.customerName}</h6>
                                            <div class="rating-stars">${stars}</div>
                                        </div>
                                    </div>
                                    <p class="mb-2">${feedback.comment || 'No comment provided'}</p>
                                    <small class="time-ago">${timeAgo}</small>
                                </div>
                            `);
                        });
                    } else {
                        $('#noFeedback').show();
                    }

                    $('#feedbackModal').modal('show');
                }).fail(function (xhr, status, error) {
                    console.error('Feedback load failed:', status, error);
                    $('#noFeedback').show();
                    $('#feedbackList').empty();
                    $('#feedbackModal').modal('show');
                });
            });

            // Helper function to calculate time ago
            function getTimeAgo(date) {
                const seconds = Math.floor((new Date() - date) / 1000);
                let interval = Math.floor(seconds / 31536000);
                if (interval >= 1) return interval + " year" + (interval === 1 ? "" : "s") + " ago";
                interval = Math.floor(seconds / 2592000);
                if (interval >= 1) return interval + " month" + (interval === 1 ? "" : "s") + " ago";
                interval = Math.floor(seconds / 86400);
                if (interval >= 1) return interval + " day" + (interval === 1 ? "" : "s") + " ago";
                interval = Math.floor(seconds / 3600);
                if (interval >= 1) return interval + " hour" + (interval === 1 ? "" : "s") + " ago";
                interval = Math.floor(seconds / 60);
                if (interval >= 1) return interval + " minute" + (interval === 1 ? "" : "s") + " ago";
                return "just now";
            }
        });
    </script>
</body>
</html>